
@{
    ViewData["Title"] = "客户接口授权";
}


<style>
    .v-modal { display: none; }
    #app { margin-top: 15px; padding: 15px; background-color: #fff; }
</style>
<div id="app">


    <el-collapse accordion v-model="activeNames">
        <el-row style="height: 48px; line-height: 48px;border-bottom: 1px solid #EBEEF5;">
            <el-col :span="16">
                <p>用户名称</p>
            </el-col>
            <el-col :span="8" style="text-align: right;">
                <span style="color:#409EFF;cursor:pointer;padding-right:15px;">添加其它接口</span>
                <span style="color:#67C23A;cursor:pointer;">保存本次修改</span>
            </el-col>
        </el-row>

        <el-collapse-item title="已授权接口" name="1" class="author_checkboxs">
            <el-row style="padding:15px;background-color:#ECF5FF;">
                <el-col :span="18">
                    <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @@change="handleCheckAllChange"> <span>接口名称</span>(<small>jiekoubianma</small> ) </el-checkbox>
                </el-col>
                <el-col :span="6" style="text-align: right;">
                    <span type="danger" style="color:#F56C6C;cursor:pointer;">移除此接口授权</span>
                </el-col>
            </el-row>
            <div style="padding:15px;">
                <el-checkbox-group v-model="checkedCities" @@change="handleCheckedCitiesChange">
                    <el-checkbox v-for="city in cities" :label="city" :key="city">
                        <span>{{city}}</span>(<small>daima</small> )
                    </el-checkbox>
                </el-checkbox-group>
            </div>
        </el-collapse-item>
    </el-collapse>
</div>

<script>
    layui.use(['element', 'layer'], function () {
        var layer = layui.layer
        var form = layui.form;
        var $ = layui.$
    })
</script>
<script>

    new Vue({
        el: "#app",
        data: function () {
            return {
                data: [],
                activeNames: ['1'],
                checkAll: false,
                checkedCities: ['上海', '北京'],
                cities: ['上海', '北京', '广州', '深圳'],
                isIndeterminate: true
            }
        },
        methods: {
            fetchList: function () {
                let vm = this

                axios.get(`/api/DcsCustomerData/${vm.pageSize}/${vm.currentPage}?customerName=${vm.searchCustomerName}&customerMobile=${vm.searchCustomerMobile}`)
                    .then(function (response) {
                        console.log(response.data);

                    })
                    .catch(function (error) {
                        console.log(error)
                    });
            },
            handleCheckAllChange(val) {
                this.checkedCities = val ? this.cities : [];
                this.isIndeterminate = false;
            },
            handleCheckedCitiesChange(value) {
                let checkedCount = value.length;
                this.checkAll = checkedCount === this.cities.length;
                this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;
            }

        },
        mounted: function () {
            let vm = this
            vm.fetchList();
        }

    });
</script>