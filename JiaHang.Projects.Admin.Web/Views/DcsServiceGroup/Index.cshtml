
@{
    ViewData["Title"] = "接口分类";
}


<style>
    .v-modal {
        display: none;
    }

    #app {
        margin-top: 15px;
        padding: 15px;
        background-color: #fff;
    }
</style>
<div id="app">

    <el-form :inline="true" class="demo-form-inline">
        <el-form-item label="分类编号">
            <el-input placeholder="分类编号" v-model="searchCode"></el-input>
        </el-form-item>
        <el-form-item label="分类名称">
            <el-input placeholder="分类名称" v-model="searchName"></el-input>
        </el-form-item>
    </el-form>
    <el-form :inline="true" class="demo-form-inline">
        <el-form-item>
            <el-button type="primary" @@click="fetchList">查询</el-button>
        </el-form-item>
        <el-form-item>
            <el-button type="primary" @@click="handleAdd">添加</el-button>
        </el-form-item>
        <el-form-item>
            <el-button type="danger" @@click="batchDelete">批量删除</el-button>
        </el-form-item>
    </el-form>

    <el-table ref="multipleTable"
              :data="data"
              :border="true"
              v-loading="loading"
              tooltip-effect="dark"
              style="width: 100%"
              @@selection-change="handleSelectionChange">
        <el-table-column type="selection"
                         width="55">
        </el-table-column>
        <el-table-column label="编号"
                         prop="serviceGroupCode">
        </el-table-column>
        <el-table-column label="名称"
                         prop="serviceGroupName">
        </el-table-column>
        <el-table-column label="图片地址"
                         prop="imageUrl">
        </el-table-column>
        <el-table-column label="创建时间"
                         prop="creationDate">
        </el-table-column>
        <el-table-column label="操作">

            <template slot-scope="scope">
                <el-button size="mini"
                           type="primary"
                           v-on:click="handleView(scope.$index,scope.row)">查看</el-button>
                <el-button size="mini"
                           v-on:click="handleEdit(scope.$index, scope.row)">编辑</el-button>
                <el-button size="mini"
                           type="danger"
                           v-on:click="handleDelete(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>


    <el-pagination @@size-change="handleSizeChange"
                   @@current-change="handleCurrentChange"
                   :current-page="pageNum"
                   :page-sizes="[10, 20, 30, 40]"
                   :page-size="pageSize"
                   layout="total, sizes, prev, pager, next, jumper"
                   :total="total">
    </el-pagination>

    <el-dialog :title="dialogTitle"
               :visible.sync="centerDialogVisible"
               width="30%"
               center>
        <el-form :label-position="labelPosition" label-width="160px" :model="form" :rules="rules" ref="form">
            <el-form-item label="编号" prop="serviceGroupCode">
                <el-input v-model="form.serviceGroupCode"></el-input>
            </el-form-item>
            <el-form-item label="名字" prop="serviceGroupName">
                <el-input v-model="form.serviceGroupName"></el-input>
            </el-form-item>
            <el-form-item label="排序" prop="sortKey">
                <el-input v-model="form.sortKey"></el-input>
            </el-form-item>

            <el-upload class="upload-demo"
                       action="/api/dcsservicegroupdata/upload/"
                       :on-preview="handlePreview"
                       :on-remove="handleRemove"
                       :file-list="imageUrl"
                       :on-success="handleAvatarSuccess"
                        multiple
                       :limit="1"
                       :on-exceed="handleExceed"
                       list-type="picture">
                <el-button size="small" type="primary">点击上传</el-button>
                <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
            </el-upload>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogCancel()">取 消</el-button>
            <el-button type="primary" v-on:click="dialogSave('form')">确 定</el-button>
        </div>
    </el-dialog>

    <el-dialog :title="dialogTitle"
               :visible.sync="BaseInfoView"
               width="70%"
               center>
        <template>
            <el-table :data="relateData"
                      style="width: 100%">
                <el-table-column prop="service_No"
                                 label="接口编号"
                                 width="180">
                </el-table-column>
                <el-table-column prop="service_Code"
                                 label="接口代码"
                                 width="180">
                </el-table-column>
                <el-table-column prop="service_Name"
                                 label="接口名"
                                 width="180">
                </el-table-column>
                <el-table-column prop="service_Version"
                                 label="接口版本"
                                 width="100">
                </el-table-column>
                <el-table-column prop="service_Tech"
                                 label="接口技术类型"
                                 width="110">
                </el-table-column>
                <el-table-column prop="service_Type"
                                 label="接口业务类型"
                                 width="110">

                    <template scope="scope">
                        <p>{{scope.row.service_Type==='SHARE'?'共享':'采集'}}</p>
                    </template>
                </el-table-column>
                <el-table-column prop="service_Status"
                                 label="接口状态"
                                 width="100">
                    <template slot-scope="scope">
                        <p v-if="scope.row.service_Status=='Y'">
                            正常
                        </p>
                        <p v-else-if="scope.row.service_Status=='N'">
                            禁用
                        </p>
                    </template>
                </el-table-column>
            </el-table>
        </template>
    </el-dialog>

</div>
<script>
    layui.use(['element', 'layer'], function () {
        var layer = layui.layer
        var form = layui.form;
        var $ = layui.$
    })
</script>
<script>

    new Vue({
        el: "#app",
        data: function () {
            return {
                data: [],
                loading:true,
                relateData: [],
                imageUrl: [],
                centerDialogVisible: false,
                BaseInfoView: false,
                pageNum: 1,
                pageSize: 10,
                total: 0,
                multipleSelection: [],//获取批量选择的数据
                searchCode: '',
                searchName: '',

                form: {
                    serviceGroupCode: '',
                    serviceGroupName: '',
                    imageUrl: '',
                    sortKey: '',
                },
                rules: {
                    serviceGroupCode: [
                        { required: true, message: '编号不能为空', trigger: 'blur' },
                        { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }
                    ],
                    serviceGroupName: [
                        { required: true, message: '名字不能为空', trigger: 'blur' },
                        { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }
                    ]


                },
                formLabelWidth: '160px',
                dialogTitle: '',
                labelPosition: 'left',
                IsCreate: true,//是否新增
            }
        },
        methods: {
            fetchList: function () {
                let vm = this
                vm.loading = true
                axios.get(`/api/DcsServiceGroupData/${vm.pageSize}/${vm.pageNum}?code=${vm.searchCode}&name=${vm.searchName}`)
                    .then(function (response) {
                        vm.data = response.data.content.data;
                        vm.total = response.data.content.total;
                        vm.loading = false
                    })
                    .catch(function (error) {
                        vm.loading = false
                        console.log(error)
                    });
           
            },

            handleAvatarSuccess(res, file) {
                let vm = this;
                vm.form.imageUrl = res.content.src;

            },

            handleRemove(file, imageUrl) {

            },
            handlePreview(file) {

            },
            handleExceed(files, imageUrl) {
                this.$message.warning(`当前限制选择 1 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + imageUrl.length} 个文件`);
            },
            beforeRemove(file, imageUrl) {

                return this.$confirm(`确定移除 ${file.name}？`);
            },
            handleView: function (index, row) {

                let vm = this


                vm.dialogTitle = "查看接口分类信息"


                axios.get(`/api/dcsservicegroupdata/searchrelateserviceinfo/${row.serviceGroupId}`)
                    .then(function (response) {
                        //赋值
                        vm.relateData = response.data.content.data;

                    })
                    .catch(function (error) {
                        vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                        console.log(error);
                    })


                vm.BaseInfoView = true;

            },
            handleEdit: function (index, row) {
                //编辑
                let vm = this
                let rowstr = JSON.stringify(row)
                let formdata = JSON.parse(rowstr)
                vm.IsCreate = false
                vm.dialogTitle = "编辑接口分类信息"
                vm.imageUrl = [{ 'name': `${row.imageUrl}`, 'url': `${row.imageUrl}` }];
                vm.form = formdata;

                vm.centerDialogVisible = true
            },
            handleDelete: function (index, row) {
                let vm = this
                //删除

                //弹出确认框

                this.$confirm('此操作将删除该接口分类信息, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.delete('/api/dcsservicegroupdata/' + row.serviceGroupId)
                        .then(function (response) {
                            if (!response.data.isSuccess) {
                                vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                return;
                            }
                            vm.$message({ title: '成功', message: '删除成功', type: 'success' })
                            vm.fetchList();
                            vm.centerDialogVisible = false
                        })
                        .catch(function (error) {
                            vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                            console.log(error);
                        });

                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '已取消删除'
                    });
                });

            },
            handleAdd: function () {
                let vm = this;
                vm.IsCreate = true;
                vm.resetForm();
                vm.imageUrl = [];
                vm.dialogTitle = "添加接口分类信息";
                vm.centerDialogVisible = true;


                //添加
            },
            dialogCancel: function () {
                let vm = this;

                vm.centerDialogVisible = false
            },
            dialogSave: function (formName) {
                let vm = this;
                vm.$refs[formName].validate((valid) => {
                    if (valid) {
                        let url = "/api/DcsServiceGroupData";
                        let method = "POST";
                        if (vm.IsCreate != true) {
                            url = `/api/DcsServiceGroupData/${vm.form.serviceGroupId}`;
                            method = "PUT";
                        }
                        var data1 = vm.form;
                        //vm.$message({ title: '成功', message: 'Success', type: 'success' })
                        axios({ url: url, method: method, data: vm.form })
                            .then(function (response) {
                                if (!response.data.isSuccess) {
                                    vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                    return;
                                }
                                vm.$message({ title: '成功', message: response.data.message, type: 'success' })
                                vm.fetchList();
                                vm.centerDialogVisible = false
                            })
                            .catch(function (error) {
                                vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                                console.log(error);
                            });

                    } else {
                        console.log('error submit!!');
                        return;
                    }
                });



            },
            resetForm() {
                let vm = this;
                vm.form.serviceGroupCode = ''
                vm.form.serviceGroupName = ''
                vm.form.imageUrl = ''
                vm.form.sortKey = ''

            },
            handleSizeChange(val) {
                console.log(`每页 ${val} 条`);
                this.pageSize = val;
                this.fetchList();
            },
            handleCurrentChange(val) {
                this.pageNum = val;
                this.fetchList();
            },
            toggleSelection(rows) {
                if (rows) {
                    rows.forEach(row => {
                        this.$refs.multipleTable.toggleRowSelection(row);
                    });
                } else {
                    this.$refs.multipleTable.clearSelection();
                }
            },
            handleSelectionChange(val) {
                this.multipleSelection = val;

            },
            batchDelete() {
                let batchdatas = this.multipleSelection;
                if (batchdatas.length == 0) {
                    return;
                }
                let ids = '';
                for (let i = 0; i < batchdatas.length; i++) {
                    ids += `&ids=${batchdatas[i].serviceGroupId}`;
                };
                ids = ids.substring(1, ids.length)
                let vm = this
                vm.$confirm(`此操作将删除${batchdatas.length}条接口分类信息, 是否继续?`, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.delete('/api/DcsServiceGroupData/BatchDelete?' + ids)
                        .then(function (response) {
                            if (!response.data.isSuccess) {
                                vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                return;
                            }
                            vm.$message({ title: '成功', message: '删除成功', type: 'success' })
                            vm.fetchList();
                            vm.centerDialogVisible = false
                        })
                        .catch(function (error) {
                            vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                            console.log(error);
                        });

                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '已取消删除'
                    });
                });
                console.log(this.multipleSelection);
            }
        },
        mounted: function () {
            let vm = this
            vm.fetchList();
        }

    });
</script>