@{
    ViewData["Title"] = "DcsServiceInfo";
    ViewBag.RangeTime = "'" + DateTime.Now.AddDays(-15).ToString("yyyy-MM-dd") + " - " + DateTime.Now.ToString("yyyy-MM-dd") + "'";
}
<script src="~/layui/css/dist/formSelects-v4.js"></script>
<link href="~/layui/css/dist/formSelects-v4.css" rel="stylesheet" />
<style>
    .layui-layer-shade {
        display: none;
    }

    .layui-select-title input {
        width: 180px;
    }

    .layui-row .layui-col-md4 {
        padding-right: 5%;
    }

    .layui-row {
        margin-bottom: 6px;
    }

    .layui-form-pane .layui-form-select {
        width: 182px;
    }

    .tbs-a {
        color: blue;
    }
</style>
<div>


    <div class="layui-form layui-form-pane" style="background-color:#F2F2F2;padding:15px;margin-top:6px;">
        <div class="layui-row">
            <div class=" layui-col-md6 layui-col-xs6">
                <label class="layui-form-label">接口编号：</label>
                <div class="layui-inline">
                    <input class="layui-input" name="id" id="search_service_no" autocomplete="off">
                </div>
            </div>
            <div class=" layui-col-md6 layui-col-xs6">
                <label class="layui-form-label">接口代码：</label>
                <div class="layui-inline">
                    <input class="layui-input" name="id" id="search_service_code" autocomplete="off">
                </div>
            </div>
            <div class=" layui-col-md6 layui-col-xs6">
                <label class="layui-form-label">接口名称：</label>
                <div class="layui-inline">
                    <input class="layui-input" name="id" id="search_service_name" autocomplete="off">
                </div>
            </div>
        </div>
        <div class="layui-form-item" style="margin-top:15px;">
            <button class="layui-btn btn-search" data-type="search">条件查询</button>
            <button class="layui-btn" data-type="showGenerateLayer">新增基本信息</button>
            <button class="layui-btn" data-type="getCheckData">选中行删除</button>
            @*<a class="layui-btn" href="/api/dcsservicegroupdata/export">导出所有</a>*@
        </div>

    </div>
    <table class="layui-hide" id="tb_test_0" lay-filter="dcsservice"> </table>

</div>

<div id="generate_layer" style="display:none;position:relative;padding:15px;">
    <div class="layui-form layui-form-pane" action="" lay-filter="generate-form">
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">目录分类</label>
                <div class="layui-input-block">
                    <select name="servicegroupid" id="servicegroupid" class="layui-input" lay-verify="required" lay-filter="xmFilter">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">接口编号</label>
                <div class="layui-input-block">
                    <input type="text" name="serviceno" id="serviceno" autocomplete="off" placeholder="接口编号" class="layui-input" lay-verify="required">
                </div>
            </div>
        </div>
        <div class="layui-form-item">

            <div class="layui-inline">
                <label class="layui-form-label">接口代码</label>
                <div class="layui-input-block">
                    <input type="text" name="servicecode" id="servicecode" autocomplete="off" placeholder="接口代码" class="layui-input" lay-verify="required">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">接口名称</label>
                <div class="layui-input-block">
                    <input type="text" name="servicename" id="servicename" autocomplete="off" placeholder="接口名称" class="layui-input" lay-verify="required">
                </div>
            </div>

        </div>
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">接口版本</label>
                <div class="layui-input-block">
                    <input type="text" name="serviceversion" id="serviceversion" autocomplete="off" placeholder="接口版本" class="layui-input" lay-verify="required">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">技术类型</label>
                <div class="layui-input-block">
                    <input type="text" name="servicetech" id="servicetech" autocomplete="off" placeholder="技术类型" class="layui-input" lay-verify="required">
                </div>
            </div>

        </div>
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">业务类型</label>
                <div class="layui-input-block">
                    <input type="text" name="servicetype" id="servicetype" autocomplete="off" placeholder="业务类型" class="layui-input" lay-verify="required">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">返回格式</label>
                <div class="layui-input-block">
                    <input type="text" name="servicereturn" id="servicereturn" autocomplete="off" placeholder="返回格式" class="layui-input" lay-verify="required">
                </div>
            </div>

        </div>

        <div class="layui-form-item layui-form-text">
            <div>
                <label class="layui-form-label">接口说明</label>
                <div class="layui-input-block">
                    <textarea name="servicedesc" id="servicedesc" placeholder="接口说明" class="layui-textarea"></textarea>
                </div>
            </div>
        </div>

        <div class="layui-form-item" style="display:none">
            <div>
                <input type="checkbox" id="status" title="状态">
                <input type="checkbox" id="page" title="是否分页">
                <input type="checkbox" id="muli" title="是否多条结果">
            </div>
        </div>
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">状态</label>
                <div class="layui-input-block">
                    <input type="checkbox" id="servicestatus" name="servicestatus" lay-skin="switch" lay-text="正常|停用">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">是否分页</label>
                <div class="layui-input-block">
                    <input type="checkbox" id="datapageflag" name="datapageflag" lay-skin="switch" lay-text="是|否">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">是否多条结果</label>
                <div class="layui-input-block">
                    <input type="checkbox" id="datamultiflag" name="datamultiflag" lay-skin="switch" lay-text="是|否">
                </div>
            </div>
        </div>



        <div class="layui-form-item">
            <button class="layui-btn" data-type="generate" id="generate_btn" lay-submit lay-filter="submit">立即创建</button>
            <button class="layui-btn layui-layer-btn1" lay-filter="demo2" data-type="closeGenerateLayer">取消</button>
        </div>
    </div>


</div>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
<script>

    var serviceId = 0;

    let layui_id;//用来标记当前是哪个table

    //用于保存多个表格的数据+状态
    var mytbs = undefined; //{ }

    //用于保存多个表格的数据+状态
    var mytbs = undefined; //{ }

    layui.use(['table', 'element', 'layer', 'form', 'laydate'], function () {

        var table = layui.table;
        var element = layui.element;
        var layer = layui.layer;
        var form = layui.form;
        var laydate = layui.laydate;
        var formSelects = layui.formSelects;
        //日期
        laydate.render({
            elem: '#end'
            , range: true,
            value: @Html.Raw(ViewBag.RangeTime),
        });
        function table_done(res, curr, count) {
            //设置样式
            $('th').css({ 'background-color': '#C0C0C0', 'font-size': '14px', 'font': 'bold' });


            //表高度自适应
        }

        mytbs = {
            tbs: [],
            id: "tb_test",
            getTitles: [
                function (data) { return data.service_Group_Name; },
                function (data) { return mytbs.tbs[0].title },
                function (data) { return mytbs.tbs[1].title },
                //end
            ],
            getSearchModels: [
                function (data) { return { serviceGroupName: data.service_Group_Name }; },
                function (data) { return { serviceGroupName: data.service_Group_Name }; },
                function (data) { return { serviceGroupName: data.service_Group_Name }; },
                //end
            ],
            tbOptions: undefined, //[],
            alltbOptions: [
                [
                    //...1
                    {
                        url: '/api/dcsserviceinfodata/search/',
                        cols: [[

                            { type: 'checkbox', fixed: 'left', width: 40 }
                            , { title: '操作', align: 'center', toolbar: '#barDemo', fixed: 'left', width: 140 }//这里的toolbar值是模板元素的选择器
                            , {
                                field: 'service_Id', width: 340, title: 'Service_Id', sort: true, fixed: 'left',
                                templet: function (data) { return '<a class="tbs-a" onclick="mytbs.click(layui.$(this));"><pre style="display:none;">' + JSON.stringify(data) + '</pre>' + data.service_Id + '</a>'; }
                              }
                            , { field: 'service_No', title: '接口编号' }
                            , { field: 'service_Code', title: '接口代码', sort: true }
                            , { field: 'service_Name', title: '接口名', sort: true }
                            , { field: 'service_Version', title: '接口版本' }
                            , { field: 'service_Tech', title: '接口技术类型', sort: true }
                            , { field: 'service_Type', title: '接口业务类型', sort: true }
                            , { field: 'service_Status', title: '接口状态', sort: true }
                        ]],
                        page:true
                    },
                    //...2
                    {
                        url: '/api/dcsservicegroupdata/search/',
                        unresize: true,
                        cols: [
                            [

                                {
                                    field: 'service_Group_Id', width: 340, title: 'ID', sort: true, fixed: 'left',
                                    templet: function (data) { return '<a class="tbs-a" onclick="mytbs.click(layui.$(this));"><pre style="display:none;">' + JSON.stringify(data) + '</pre>' + data.service_Group_Id + '</a>'; }
                                }
                                , { field: 'service_Group_Code', title: '接口分类编号' }
                                , { field: 'service_Group_Name', title: '接口分类名', sort: true }
                                , { field: 'image_Url', title: '接口图片地址', sort: true }
                            ]
                        ]
                    },
                    //...3
                    {
                        url: '/api/dcsservicegroupdata/search/',
                        unresize: true,
                        cols: [
                            [

                                {
                                    field: 'service_Group_Id', width: 340, title: 'ID', sort: true, fixed: 'left',
                                    templet: function (data) { return '<a class="tbs-a" onclick="mytbs.click(layui.$(this));"><pre style="display:none;">' + JSON.stringify(data) + '</pre>' + data.service_Group_Id + '</a>'; }
                                }
                                , { field: 'service_Group_Code', title: '接口分类编号' }
                                , { field: 'service_Group_Name', title: '接口分类名', sort: true }
                                , { field: 'image_Url', title: '接口图片地址', sort: true }
                            ]
                        ]
                    }
                ],
            ]
        };//mytbs
        //表格加载
        mytbs.init = function (i) {
            if (i >= mytbs.tbOptions.length) return;
            var id = mytbs.id + "_" + i;
            console.log(id);
            layui_id = id;
            mytbs.tbs[i] = mytbs.tbs[i] || {};

            var w = {};
            if (i != 0) {
                w.width = 20;
                $.each(mytbs.tbOptions[i].cols[mytbs.tbOptions[i].cols.length - 1] || [], function (_, c) { w.width += (c.width || 80); });
            }

            table.render($.extend(w,
                {
                    contentType: 'application/json',
                    method: 'post',
                    parseData: function (res) { //res 即为原始返回的数据
                        return {
                            "status": res.isSuccess,
                            "code": res.isSuccess == true ? 0 : 1, //解析接口状态
                            "msg": res.message, //解析提示文本
                            "count": res.content.total, //解析数据长度
                            "data": res.content.data //解析数据列表
                        };
                    },
                },
                mytbs.tbOptions[i] || {},
                {
                    id: id,
                    elem: '#' + id,
                    text: {
                        none: '暂无相关数据'
                    },
                    done: table_done
                }
            ));

            //监听工具条
            table.on('tool(dcsservice)', function (obj) {
                var data = obj.data;
                if (obj.event === 'detail') {
                    layer.msg('ID：' + data.id + ' 的查看操作');
                } else if (obj.event === 'del') {
                    let confirm_title = "确认删除账号" + data.service_Id + "的记录么";
                    layer.confirm(confirm_title, function (index) {
                        layer.close(index);
                        axios.delete('/api/dcsserviceinfodata/' + data.service_Group_Id)
                            .then(function (response) {
                                layer.msg(response.data.message);
                                if (!response.data.isSuccess) {
                                    return;
                                }
                                obj.del();
                            })
                            .catch(function (error) {
                                console.log(error);
                            });

                    });
                } else if (obj.event === 'edit') {
                    serviceId = data.service_Id
                    layType = false;
                    showLayer(data);
                }
            });
        };
        //点击事件
        mytbs.click = function (a) {
            var i = parseInt(a.parents('[lay-id]').prev().attr('id').replace(mytbs.id + '_', ''));
            var id = mytbs.id + "_" + i, id2 = mytbs.id + "_" + (i + 1);
            console.log(id);
            var data = JSON.parse(a.find('pre').html());
            layui_id = id;
            //关闭之前的窗口
            //layer.close(mytbs.tbs[i].tr)

            var str = '<div class="tbs-div">'
                + '<table class="layui-hide" id="' + id2 + '" lay-filter="' + id2 + '"></table>'
                + '</div>';

            mytbs.tbs[i].title = mytbs.getTitles[i](data);
            //打开一个div
            layer.open({
                type: 1,
                //skin: 'layui-layer-rim', //加上边框
                area: ['80%', '70%'], //宽高
                resize: true,
                isOutAnim: false,
                title: mytbs.tbs[i].title || ' ',
                content: str,
                success: function (layero, index) {
                    //mytbs.tbs[i].tr = index;

                    //set mytbs.tbOptions[i + 1].where
                    mytbs.tbOptions[i + 1].where = $.extend(getSearchParms(), mytbs.getSearchModels[i](data));

                    mytbs.init(i + 1);
                    setTimeout(function () { table.resize(id); }, 1);
                },

                end: function () {
                    mytbs.tbs[i] = {}; //reset to empty
                    setTimeout(function () { table.resize(id); }, 1);
                }
            });
        };
        mytbs.reload = function (i, where, done) {
            var id = mytbs.id + "_" + i;
            layui_id = id;
            table.reload(id, {
                where: where,
                done: function () {
                    table_done.call(this, arguments), done.call(this, arguments);
                }
            });
        };

        mytbs.tbOptions = mytbs.alltbOptions[0];
        mytbs.init(0);
        //获取查询参数
        function getSearchParms() {

        }

        var active = {
            getCheckData: function () { //获取选中数据
                var checkStatus = table.checkStatus('tb_test_0')
                    , data = checkStatus.data;

                layer.confirm("确认删除" + data.length + "条记录么", function (index) {
                    layer.close(index);

                    let ids = [];
                    let parms = "?";
                    for (let i = 0; i < data.length; i++) {
                        ids.push(data[i].service_Id);
                        parms += "ids=" + data[i].service_Id + "&";
                    }
                    parms = parms.substring(0, parms.length - 1);
                    axios.delete("/api/dcsserviceinfodata/batchdelete/" + parms)
                        .then(function (response) {
                            layer.msg(response.data.message);
                            if (!response.data.isSuccess) {
                                return;
                            }

                            //移除
                            let tabledata = table.cache.tb_test_0;
                            tableReload(tabledata);


                        })
                        .catch(function (error) {
                            layer.msg("发生了预料之外的错误!");
                            console.log(error);
                        });
                });


            },
            //查询操作传参数
            search: function () {
                let pars = {
                    limit: 10,
                    page: 1,
                    ServiceNo: $('#search_service_no').val(),
                    ServiceCode: $('#search_service_code').val(),
                    ServiceName: $('#search_service_name').val()
                }

                //执行重载
                table.reload('tb_test_0', {
                    where: pars,
                    contentType: 'application/json',
                    method: 'post'
                });
            },
            showGenerateLayer: function () {
                layType = true;
                showLayer();
            },
            closeGenerateLayer: function () {
                layer.close(generateLayer_index);
            },
            //导出
            export: function () {
                console.log('export');

                let pars = getSearchParms();

                let url = '/api/dcsserviceinfodata/export?' + $.param(pars);
                window.location.href = url;
            }
        };
        //监听指定开关
        //form.on('switch(switchTest)', function (data) {
        //    if (this.checked == 'true') {
        //        this.checked = 'false';
        //    }
        //    else {
        //        this.checked = 'true';
        //    }
        //    layer.msg('开关checked：' + (this.checked ? 'true' : 'false'), {
        //        offset: '6px'
        //    });
        //});

        form.on('submit(submit)', function () {
            let model = {
                servicegroupid: $("#servicegroupid").val(),
                serviceno: $("#serviceno").val(),
                servicecode: $("#servicecode").val(),
                servicename: $("#servicename").val(),
                servicedesc: $("#servicedesc").val(),
                serviceversion: $("#serviceversion").val(),
                servicetech: $("#servicetech").val(),
                servicetype: $("#servicetype").val(),
                servicereturn: $("#servicereturn").val(),
                servicestatus: $("#servicestatus")[0].checked == 'true' ? 'N' : 'Y',
                datapageflag: $("#datapageflag")[0].checked == true ? 1 : 0,
                datamultiflag: $("#datamultiflag")[0].checked == true ? 1 : 0
            };
            let url = "/api/dcsserviceinfodata";
            let method = "POST";
            if (layType != true) {
                url = "/api/dcsserviceinfodata/" + serviceId;
                method = "PUT";
            }
            axios({ url: url, method: method, data: model })
                .then(function (response) {
                    layer.msg(response.data.message);
                    if (!response.data.isSuccess) {
                        return;
                    }
                    let datatable = table.cache.tb_test_0;
                    if (layType != true) {
                        //修改
                        for (let i = 0; i < datatable.length; i++) {
                            if (datatable[i].service_group_id == response.data.content.service_group_id) {
                                datatable.splice(i, 1, response.data.content);
                                break;
                            }
                        }
                    }
                    else {
                        //新增
                        datatable.unshift(response.content)

                    }
                    tableReload(datatable)
                    layer.close(generateLayer_index);
                })
                .catch(function (error) {
                    layer.msg("发生了预料之外的错误!");
                    console.log(error);
                });

            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
        }),

        $('.layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });
        function showLayer(data) {
            initFormValue(data);
            let title = "新增基本信息";
            document.getElementById("generate_btn").innerHTML = "立即创建";
            if (layType != true) {
                title = "编辑基本信息";
                document.getElementById("generate_btn").innerHTML = "立即修改";
            }
            generateLayer_index = layer.open({
                type: 1
                , title: title //不显示标题栏
                , closeBtn: false
                , fixed: false
                , area: ['800px', '600px']
                , resize: false
                , shade: 0.8
                , id: 'LAY_layuipro' //设定一个id，防止重复弹出
                //, btn: ['火速围观', '残忍拒绝']
                , btnAlign: 'c'
                , moveType: 0 //拖拽模式，0或者1
                , content: $('#generate_layer') //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                , offset: ['10%', '3%']
            });
        };
        function initFormValue(data) {
            if (data == undefined) {
                form.val("generate-form", {
                    servicegroupid: '',
                    serviceno:'',
                    servicecode: '',
                    servicename: '',
                    servicedesc: '',
                    serviceversion: '',
                    servicetech: '',
                    servicetype: '',
                    servicereturn: '',
                    servicestatus: '',
                    datapageflag: '',
                    datamultiflag: ''
                })
                return;
            }
            else {
                form.val("generate-form", {
                    servicegroupid: data.service_Group_Id,
                    serviceno: data.service_No,
                    servicecode: data.service_Code,
                    servicename: data.service_Name,
                    servicedesc: data.Service_Desc,
                    serviceversion: data.service_Version,
                    servicetech: data.service_Tech,
                    servicetype: data.service_Type,
                    servicereturn: data.service_Return,
                    servicestatus: data.service_Status == '启用' ? true : false,
                    datapageflag: data.datapageflag == 1 ? true : false,
                    datamultiflag: data.datamultiflag == 1 ? true : false
                });
            }

        }

        function tableReload(datatable) {
            table.reload("tb_test_0", {
                data: datatable
            })
        }

        //目录分类
        $.ajax({
            async: false,
            url: "/api/dcsservicegroupdata/GetServiceGroup",
            type:'post',
            success: function (data) {
                $.each(data, function (index, item) {
                    $('#servicegroupid').append(new Option(item.value,item.key));// 下拉菜单里添加元素
                });
                layui.form.render("select");
            }
        });

    });


</script>


