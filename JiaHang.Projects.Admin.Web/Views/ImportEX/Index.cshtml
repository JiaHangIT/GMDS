
@{
    ViewData["Title"] = "数据展示";
}
<style>
    .layui-select-title input {
        width: 194px;
    }

    .layui-form-pane .layui-form-select {
        width: 194px;
    }

    .v-modal {
        display: none;
    }

    #app {
        margin-top: 15px;
        padding: 15px;
        background-color: #fff;
    }
</style>

<div id="app">
    <el-form :inline="true" class="demo-form-inline">
        <div class="layui-row">
            <el-form-item label="企业名称">
                <el-input placeholder="请输入企业名称" v-model="orgname"></el-input>
            </el-form-item>
            <el-form-item label="企业信用代码">
                <el-input placeholder="请输入企业信用代码" v-model="orgcode"></el-input>
            </el-form-item>
            <el-form-item label="年份">
                <el-date-picker v-model="orgyear"
                                type="year"
                                format="yyyy"
                                placeholder="选择年">
                </el-date-picker>
            </el-form-item>
        </div>

    </el-form>
    <el-form :inline="true" class="demo-form-inline">
        <el-form-item>
            <el-button type="primary" @@click="querydata">查询</el-button>
        </el-form-item>
        <el-form-item>
            <el-button type="success" @@click="query">导出</el-button>
        </el-form-item>
        <el-form-item>
            <el-button type="success" @@click="()=>{ this.showbutton = true}">导入</el-button>
        </el-form-item>
        @*<el-form-item>
                <el-button type="success" @@click="downtemplate">下载模板</el-button>
            </el-form-item>
            <el-form-item>
                <el-upload class="upload-demo"
                           action="/api/ApdFctTAxImport/upload"
                           :before-upload="beforeUpload"
                           :data="model"
                           :show-file-list="false">
                    <el-button  type="primary">点击上传</el-button>
                </el-upload>
            </el-form-item>*@
    </el-form>

    <div v-loading="loading">
        <el-table :data="data"
                  style="width: 100%;"
                  :height="tableheight">
            <el-table-column fixed
                             prop="orgName"
                             label="企业名称"
                             width="150">
            </el-table-column>
            <el-table-column prop="periodYear"
                             label="年份"
                             width="150">
            </el-table-column>
            <el-table-column prop="town"
                             label="所属镇街"
                             width="150">
            </el-table-column>

            <el-table-column prop="orgCode"
                             label="统一社会信用代码"
                             width="150">
            </el-table-column>
            <el-table-column prop="RegistrationType"
                             label="登记注册类型"
                             width="150">
            </el-table-column>
            <el-table-column prop="Address"
                             label="住所"
                             width="150">
            </el-table-column>
            <el-table-column label="法定代表人">
                <el-table-column prop="LegalRepresentative"
                                 label="姓名"
                                 width="120">
                </el-table-column>
                <el-table-column prop="Phone"
                                 label="联系电话"
                                 width="120">
                </el-table-column>
            </el-table-column>
            <el-table-column label="日常联系人">
                <el-table-column prop="LinkMan"
                                 label="姓名"
                                 width="120">
                </el-table-column>
                <el-table-column prop="Phone2"
                                 label="联系电话"
                                 width="120">
                </el-table-column>
            </el-table-column>
            <el-table-column prop="entPaidTax"
                             label="企业实缴税金（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="employeeRemunerationON"
                             label="职工薪酬（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="depreciation"
                             label="固定资产折旧（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="profit"
                             label="营业利润（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="mainBusinessIncome"
                             label="主营业务收入（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="radEexpenses"
                             label="允许扣除的研发费用（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="numberOfEmployees"
                             label="平均从业人数（人）"
                             width="120">
            </el-table-column>
            <el-table-column prop="ownerEquity"
                             label="所有者权益（万元）"
                             width="120">
            </el-table-column>
            <el-table-column prop="totalProfit"
                             label="利润总额（万元）"
                             width="120">
            </el-table-column>
            @*<el-table-column prop="remark"
                         label="备注"
                         width="120">
        </el-table-column>*@
            <el-table-column fixed="right"
                             label="操作">
                <template slot-scope="scope">
                    <el-button size="mini"
                               v-on:click="handleEdit(scope.$index, scope.row)">编辑</el-button>

                    <el-button size="mini"
                type="danger"
                v-on:click="handleDelete(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
        <el-pagination @@size-change="handleSizeChange"
                       @@current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[10, 20, 30, 40]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="total">
        </el-pagination>
        <el-dialog :title="dialogTitle"
                   :visible.sync="centerDialogVisible"
                   width="35%"
                   center>
            <el-form :label-position="labelPosition" label-width="160px" :model="form" :rules="rules" ref="form">
                <el-form-item label="ID：" prop="ID" hidden>
                    <el-input placeholder="主键" v-model="form.recordId"></el-input>
                </el-form-item>

                <el-form-item label="企业名称：" prop="orgName">
                    <el-input disabled="true" placeholder="企业名称" v-model="form.orgName"></el-input>
                </el-form-item>
                <el-form-item label="企业实缴税金（万元）：" prop="entPaidTax">
                    <el-input placeholder="企业实缴税金（万元）" v-model="form.entPaidTax"></el-input>
                </el-form-item>
                <el-form-item label="职工薪酬（万元）" prop="employeeRemunerationON">
                    <el-input placeholder="职工薪酬（万元）" v-model="form.employeeRemunerationON"></el-input>
                </el-form-item>
                <el-form-item label="固定资产折旧（万元）" prop="depreciation">
                    <el-input placeholder="固定资产折旧（万元）" v-model="form.depreciation"></el-input>
                </el-form-item>
                <el-form-item label="营业利润（万元）" prop="profit">
                    <el-input placeholder="营业利润（万元）" v-model="form.profit"></el-input>
                </el-form-item>
                <el-form-item label="主营业务收入（万元）" prop="mainBusinessIncome">
                    <el-input placeholder="主营业务收入（万元）" v-model.number="form.mainBusinessIncome"></el-input>
                </el-form-item>
                <el-form-item label="允许扣除的研发费用（万元）" prop="radEexpenses">
                    <el-input placeholder="允许扣除的研发费用（万元）" v-model.number="form.radEexpenses"></el-input>
                </el-form-item>
                <el-form-item label="平均从业人数（人）" prop="numberOfEmployees">
                    <el-input placeholder="平均从业人数（人）" v-model.number="form.numberOfEmployees"></el-input>
                </el-form-item>
                <el-form-item label="利润总额（万元）" prop="totalProfit">
                    <el-input placeholder="利润总额（万元）" v-model.number="form.totalProfit"></el-input>
                </el-form-item>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button v-on:click="dialogCancel()">取 消</el-button>
                <el-button type="primary" v-on:click="dialogSave('form')">确 定</el-button>
            </div>
        </el-dialog>
    </div>
    <el-dialog :title="buttontxt"
               :visible.sync="showbutton"
               width="20%"
               :modal-append-to-body="false"
               center>
        <el-form>
            <el-form-item>
                <el-button type="primary" @@click="downtemplate">下载模板</el-button>
            </el-form-item>
            <el-form-item label="请选择导入年份">
                <el-date-picker v-model="exportyear"
                                type="year"
                                format="yyyy"
                                placeholder="选择年">
                </el-date-picker>
            </el-form-item>
            <el-form-item>
                <el-upload class="upload-demo"
                           action="/api/ApdFctTAxImport/upload"
                           :before-upload="beforeUpload"
                           :on-success="uploadSuccess"
                           :on-error="uploadError"
                           :data="model"
                           :show-file-list="false">
                    <el-button size="small" type="primary">点击上传</el-button>
                </el-upload>
            </el-form-item>
        </el-form>

    </el-dialog>

</div>
<script>
    layui.use(['element', 'layer'], function () {
        var layer = layui.layer
        var form = layui.form;
        var $ = layui.$
    })
</script>
<script>
    new Vue({
        el: '#app',
        data() {
            return {
                buttontxt: '',
                showbutton: false,
                tableheight: null,
                loading: false,
                array: [],
                sym: 0,
                data: [],
                centerDialogVisible: false,
                orgname: '',
                orgcode: '',
                pageSize: 10,
                currentPage: 1,
                total: 0,
                orgyear: '',
                model: { year: '' },
                exportyear: '',
                form: {
                    RECORD_ID:'',
                    ORG_CODE: '',
                    ENT_PAID_TAX: '',
                    EMPLOYEE_REMUNERATION: '',
                    DEPRECIATION: '',
                    PROFIT: '',
                    MAIN_BUSINESS_INCOME: '',
                    RAD_EXPENSES: '',
                    NUMBER_OF_EMPLOYEES: '',
                    OWNER_EQUITY: '',
                    TOTAL_PROFIT:''
                },
                rules: {
                    RECORD_ID: [
                        { required: true, message: '主键不能为空', trigger: 'blur' },

                    ]
                },
                model: { year: '' },
                exportyear: '',
                dialogTitle: '',
                labelPosition: 'left',
            }
        },
        methods: {
            fetchlist() {
                let vm = this;
                let y = ''
                var top = $("#app").offset().top;
                //自适应表高度
                var height = Math.max(0, document.documentElement.clientHeight) - top - 1;
                vm.tableheight = height
                if (vm.orgyear != '' && vm.orgyear != null) {
                    y = vm.orgyear.getFullYear()
                }
                axios({ url: `/api/apdfcttaximport/getlist`, method: 'post', data: { orgname: vm.orgname, orgcode: vm.orgcode, limit: vm.pageSize, page: vm.currentPage, year: y } }).then(res => {
                    vm.data = res.data.content.data
                    console.log("数据:",res.data.content.data)
                    vm.data = res.data.content.data
                    vm.array = res.data.content.array
                    vm.total = res.data.content.total
                    vm.array = res.data.content.array
                    vm.loading = false
                }).catch(err => { console.log(err); vm.loading = false })
            },
            dialogCancel: function () {
                let vm = this;
                vm.centerDialogVisible = false
            },
            handleEdit: function (index, row) {
                //编辑
                let vm = this
                let rowstr = JSON.stringify(row)
                let formdata = JSON.parse(rowstr)
                vm.IsCreate = false
                vm.dialogTitle = "编辑信息"
                vm.form = formdata;
                console.log(formdata);
                console.log(vm.form);
                vm.centerDialogVisible = true
            },
            dialogSave: function (formName) {                
                let vm = this;
                let model = ''
                //console.log("shuju数据：", vm.form.recordId);
                
                vm.$refs[formName].validate((valid) => {
                    if (valid) {
                        let url = "/api/apdfcttaximport";
                        let method = "POST";
                        if (vm.IsCreate != true) {
                            url = `/api/apdfcttaximport/${vm.form.recordId}`;
                            method = "PUT";

                        }
                        //console.log(vm.form.user_Is_Ldap);
                        //console.log(vm.form.user_Is_Lock);
                        model = {
                            RECORD_ID:vm.form.recordId,
                            ORG_CODE: vm.form.orgCode,
                            ENT_PAID_TAX: vm.form.entPaidTax,
                            EMPLOYEE_REMUNERATION: vm.form.employeeRemunerationON,
                            DEPRECIATION: vm.form.depreciation,
                            PROFIT: vm.form.profit,
                            MAIN_BUSINESS_INCOME: vm.form.mainBusinessIncome,
                            RAD_EXPENSES: vm.form.radEexpenses,
                            OWNER_EQUITY: vm.form.ownerEquity,
                            TOTAL_PROFIT: vm.form.totalProfit,
                            NUMBER_OF_EMPLOYEES: vm.form.numberOfEmployees
                        };
                        console.log(model);
                        axios({ url: url, method: method, data: model })
                            .then(function (response) {
                                if (!response.data.isSuccess) {
                                    vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                    return;
                                }
                                vm.$message({ title: '成功', message: response.data.message, type: 'success' })
                                vm.fetchlist();
                                vm.centerDialogVisible = false
                            })
                            .catch(function (error) {
                                vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                                console.log(error);
                            });

                    } else {
                        console.log('error submit!!');
                        return;
                    }
                });
            },
            resetForm() {
                let vm = this;
                vm.form.RECORD_ID = ''
                vm.form.ORG_CODE = ''
                vm.form.ENT_PAID_TAX = ''
                vm.form.EMPLOYEE_REMUNERATION = ''
                vm.form.DEPRECIATION = ''
                vm.form.PROFIT = ''

                vm.form.MAIN_BUSINESS_INCOME = ''
                vm.form.RAD_EXPENSES = ''
                vm.form.NUMBER_OF_EMPLOYEES = ''
                vm.form.OWNER_EQUITY = ''
                vm.form.TOTAL_PROFIT = ''
            },
            handleDelete: function (index, row) {
                let vm = this
                console.log("删除ID:", row);
                vm.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    let url = `/api/ApdFctTAxImport/delete/${row.recordId}`
                    let method = 'get'
                    axios({ url: url, method: method })
                        .then(res => {
                            if (res.data.isSuccess === true) {
                                vm.$message.success('操作成功！');
                                vm.fetchlist();
                            }
                            console.log(res)
                        })
                        .catch(error => {
                            vm.$message.error('操作失败，意外的原因！');
                            console.log(error)
                        })
                }).catch(() => {
                    vm.$message({
                        type: 'info',
                        message: '已取消删除'
                    });
                });
            },
            handleSizeChange(val) {
                let vm = this
                vm.pageSize = val
                vm.fetchlist()
                console.log(`每页 ${val} 条`);
            },
            handleCurrentChange(val) {
                let vm = this
                vm.currentPage = val
                vm.fetchlist()
                console.log(`当前页: ${val}`);
            },

            handleSelectionChange(val) {
                this.multipleSelection = val;

            },
            objectSpanMethod({ row, column, rowIndex, columnIndex }) {
                let vm = this
                let c = row.count
                console.log(row.count)
                if (columnIndex < 9 || columnIndex > 11) {
                    //只有一行返回count个，其他的返回0
                    if (vm.array.find(item => { return item == rowIndex }) != null) {

                        return {
                            rowspan: c,
                            colspan: 1
                        };
                    } else {
                        return {
                            rowspan: 0,
                            colspan: 0
                        };
                    }
                }
            },
            querydata() {
                let vm = this
                vm.fetchlist()
            },
            uploadSuccess(response, file, fileList) {
                let vm = this
                vm.showbutton = false
                if (response.isSuccess == true) {
                    vm.$message.success(response.message);
                } else {
                    vm.$message.error(response.message);
                }
                debugger
                console.log(response);
            },
            uploadError(err, file, fileList) {
                let vm = this
                vm.showbutton = false
                vm.$message.error('操作失败！' + err);
                debugger
                console.log(err)
            },
            query() {
                //axios.get(`/api/qiyefile/export`).then(res => {
                //    console.log(res)
                //}).catch(err => {
                //    console.log(err)
                //})

                window.location.href = '/api/ApdFctTAxImport/export'
            },
            downtemplate() {
                window.location.href = `/api/ApdFctTAxImport/apxfcttaximportlate`
            },
            beforeUpload() {
                let vm = this
                try {

                    vm.model.year = vm.exportyear.getFullYear()
                    if (vm.model.year === '') {
                        vm.$message.error('请先选择年份!');
                        return false
                    }
                } catch (e) {
                    vm.$message.error('请先选择年份!');
                    return false
                }
            },
        },
        mounted() {
            let vm = this;
            vm.loading = true
            vm.fetchlist()
        }
    })
</script>

