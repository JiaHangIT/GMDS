<div>
    <div style="padding:0px 15px;cursor:pointer;float:left;" id="animation-left-nav"><a class="layui-icon layui-icon-spread-left" style="color:#1E9FFF;"></a></div>
    <span class="layui-breadcrumb" id="breadcrumb" style="visibility: visible;">
    </span>
</div>


<script>
    // 填充breadcrumb数据
    //获取当前路由
    var routes_str = window.localStorage.getItem("userroutes");
    if (routes_str != null) {
        routes = JSON.parse(routes_str);
        //获取当前模块id
        var current_moduleId = window.localStorage.getItem("current_moduleId");
        
        let side = document.getElementById("side");

        let c_routes = {};
        for (let i = 0; i < routes.length; i++) {
            if (routes[i].modelGroupId === current_moduleId) {
                //generateMenu(side, [routes[i]], 1);
                c_routes = routes[i];
                break;
            }
        }
        
        if (c_routes.modelGroups == null || c_routes.modelGroups == undefined) {
            c_routes = routes[0]
        }

        let breadcrumb = document.getElementById("breadcrumb");
        let group = document.createElement("a");
        group.innerText = c_routes.modelGroupName;
        group.href = c_routes.modelGroupUrl;
        breadcrumb.appendChild(group);
        let eflag = false;
        for (let i = 0; i < c_routes.modelGroups.length; i++) {
            for (let j = 0; j < c_routes.modelGroups[i].models.length; j++) {
                let cmodel = c_routes.modelGroups[i].models[j];
                if (cmodel.modelUrl == GetUrlRelativePath(cmodel.outUrlFlag)) {
                    let a = document.createElement("a");
                    a.innerText = c_routes.modelGroups[i].modelGroupName;
                    a.href = c_routes.modelGroups[i].modelGroupUrl;
                    let cite = document.createElement("cite");
                    cite.innerText = cmodel.modelName;
                    let moa = document.createElement("a");
                    moa.appendChild(cite);
                    breadcrumb.appendChild(a);
                    breadcrumb.appendChild(moa);
                    eflag = true;
                    break;
                }
            }
        }
        for (let i = 0; i < c_routes.models.length; i++) {
            let cmodel = c_routes.models[i];
            if (cmodel.modelUrl == GetUrlRelativePath(cmodel.outUrlFlag)) {
                let cite = document.createElement("cite");
                cite.innerText = cmodel.modelName;
                let moa = document.createElement("a");
                moa.appendChild(cite);
                breadcrumb.appendChild(moa);
                eflag = true;
                break;
            }
        }

        if (eflag == false) {
            let cite = document.createElement("cite");
            cite.innerText = '@Html.Raw(ViewData["Title"])';
            let moa = document.createElement("a");
            moa.appendChild(cite);
            breadcrumb.appendChild(moa);
        }
        //for (let i = 0; i < c_routes.models.length; i++) {
        //    let controller = c_routes.models[i];
        //    if (controller.modelUrl == GetUrlRelativePath(controller.outUrlFlag)) {

        //        let cite = document.createElement("cite");
        //        cite.innerText = controller.modelName;
        //        let moa = document.createElement("a");
        //        moa.appendChild(cite);
        //        breadcrumb.appendChild(moa);
        //    }
        //}

    }
    //获取当前url
    function GetUrlRelativePath(isIframe) {
        var url = document.location.toString();
        if (isIframe == true) {
            let s = url.indexOf("/iframe");
            let curl = url.substr(s);
            console.log(curl);
            return curl;
        }
        var arrUrl = url.split("//");

        var start = arrUrl[1].indexOf("/");
        var relUrl = arrUrl[1].substring(start);//stop省略，截取从start开始到结尾的所有字符

        if (relUrl.indexOf("?") != -1) {
            relUrl = relUrl.split("?")[0];
        }
        return relUrl;
    }

    let current_nav_status = true;//展开
    $('#animation-left-nav').click(function () {
        //这里定义一个全局变量来方便判断动画收缩的效果,也就是放在最外面
        if (current_nav_status) {//收缩
            $(".layui-side").animate({ width: 'toggle' });
            $(".layui-body").animate({ left: '0px' });
            $(".layui-footer").animate({ left: '0px' });

        } else {//展开
            $(".layui-side").animate({ width: 'toggle' });
            $(".layui-body").animate({ left: '200px' });
            $(".layui-footer").animate({ left: '200px' });
            //i--;
        }
        current_nav_status = !current_nav_status;
    });
    //左侧导航栏收缩提示
    $('#animation-left-nav').hover(function () {
        let tips = current_nav_status ? "收缩菜单" : "展开菜单"
        layer.tips(tips, '#animation-left-nav', { tips: [4, '#5FB878'], time: 0 });
    }, function () {
        layer.closeAll('tips');
    });
</script>