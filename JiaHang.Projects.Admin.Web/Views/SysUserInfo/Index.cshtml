
@{
    ViewData["Title"] = "ElemeIndex";
}

<style>
    .v-modal {
        display: none;
    }

    #app {
        margin-top: 15px;
        padding: 15px;
        background-color: #fff;
    }
</style>
<div id="app">

    <el-form :inline="true" class="demo-form-inline">
        <el-form-item label="用户账号：">
            <el-input placeholder="用户账号" v-model="searchuserAccount"></el-input>
        </el-form-item>
        <el-form-item label="用户名称：">
            <el-input placeholder="用户名称" v-model="searchuserName"></el-input>
        </el-form-item>
    </el-form>
    <el-form :inline="true" class="demo-form-inline">
        <el-form-item>
            <el-button size="small" type="primary" @@click="fetchList">条件查询</el-button>
        </el-form-item>
        <el-form-item>
            <el-button size="small" type="primary" @@click="handleAdd">添加用户</el-button>
        </el-form-item>
        <el-form-item>
            <el-button size="small" type="danger" @@click="batchDelete">选中行删除</el-button>
        </el-form-item>
        <el-form-item>
            <el-button size="small" type="primary" @@click="test">导出所有</el-button>
        </el-form-item>
    </el-form>

    <el-table ref="multipleTable"
              :data="data"
              :border="true"
              tooltip-effect="dark"
              style="width: 100%"
              @@selection-change="handleSelectionChange">
        <el-table-column type="selection"
                         width="55">
        </el-table-column>
        <el-table-column label="用户账号"
                         prop="user_Account">
        </el-table-column>
        <el-table-column label="用户名"
                         prop="user_Name">
        </el-table-column>
        <el-table-column label="邮箱地址"
                         prop="user_Email">
        </el-table-column>
        <el-table-column label="建立时间"
                         prop="creationDate">
        </el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini"
                           v-on:click="handleEdit(scope.$index, scope.row)">编辑</el-button>

                <el-button size="mini"
                           type="danger"
                           v-on:click="handleDelete(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>
    <el-pagination @@size-change="handleSizeChange"
                   @@current-change="handleCurrentChange"
                   :current-page="currentPage"
                   :page-sizes="[10, 20, 30, 40]"
                   :page-size="pageSize"
                   layout="total, sizes, prev, pager, next, jumper"
                   :total="total">
    </el-pagination>
    <el-dialog :title="dialogTitle"
               :visible.sync="centerDialogVisible"
               width="30%"
               center>
        <el-form :label-position="labelPosition" label-width="160px" :model="form" :rules="rules" ref="form">
            <el-form-item label="ID：" prop="ID" hidden>
                <el-input placeholder="id" v-model="form.user_Id"></el-input>
            </el-form-item>
            <el-form-item label="登录账号：" prop="user_Account">
                <el-input placeholder="登录账号" v-model="form.user_Account"></el-input>
            </el-form-item>
            <el-form-item label="用户密码" prop="user_Password">
                <el-input placeholder="用户密码" v-model="form.user_Password"></el-input>
            </el-form-item>
            <el-form-item label="用户名称" prop="user_Name">
                <el-input placeholder="用户名称" v-model="form.user_Name"></el-input>
            </el-form-item>
            <el-form-item label="电子邮件" prop="user_Email">
                <el-input placeholder="电子邮件" v-model="form.user_Email"></el-input>
            </el-form-item>
            <el-form-item label="手机号码" prop="user_Mobile_No">
                <el-input placeholder="手机号码" v-model.number="form.user_Mobile_No"></el-input>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogCancel()">取 消</el-button>
            <el-button type="primary" v-on:click="dialogSave('form')">确 定</el-button>
        </div>
    </el-dialog>
</div>
<script>
    layui.use(['element', 'layer'], function () {
        var layer = layui.layer
        var form = layui.form;
        var $ = layui.$
    })
</script>
<script>
    new Vue({
        el: "#app",
        data: function () {
            return {
                data: [],
                centerDialogVisible: false,
                currentPage: 1,
                pageSize: 10,
                total: 0,
                multipleSelection: [],//获取批量选择的数据
                searchuserAccount: '',
                searchuserName: '',
                form: {
                    user_Id:'',
                    user_Account: '',
                    user_Password: '',
                    user_Name: '',
                    user_Email: '',
                    user_Mobile_No: '',
                },
                rules: {
                    user_Account: [
                        { required: true, message: '登录账号不能为空', trigger: 'blur' },
                       
                    ],
                    user_Password: [
                        { required: true, message: '用户密码不能为空', trigger: 'blur' },
                        { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }
                    ],
                    user_Name: [
                        { required: true, message: '用户名称不能为空', trigger: 'blur' },
                        { min: 2, max: 10, message: '长度在 2 到 10 个字符', trigger: 'blur' }
                    ],
                    user_Email: [
                        { required: true, type: 'email', message: '输入正确邮箱', trigger: 'blur' }
                    ],
                    user_Mobile_No: [
                        {
                            required: true,
                            message: '请输入手机号',
                            trigger: 'blur'
                        },
                        {
                            pattern: /^1[34578]\d{9}$/,
                            message: '手机号格式不对',
                            trigger: 'blur'
                        }
                    ],
                },
                formLabelWidth: '160px',
                dialogTitle: '',
                labelPosition: 'left',
                IsCreate: true,//是否新增
            }
        },
        methods: {
            fetchList: function () {
                let vm = this
                axios.get(`/api/sysuserinfodata/${vm.pageSize}/${vm.currentPage}?userAccount=${vm.searchuserAccount}&userName=${vm.searchuserName}`)
                    .then(function (response) {
                        vm.data = response.data.content.data;
                        vm.total = response.data.content.total;
                    })
                    .catch(function (error) {
                        console.log(error)
                    });
            },
            handleEdit: function (index, row) {
                //编辑
                let vm = this
                let rowstr = JSON.stringify(row)
                let formdata = JSON.parse(rowstr)
                vm.IsCreate = false
                vm.dialogTitle = "编辑信息"
                vm.form = formdata;
                console.log(formdata);
                console.log(vm.form);
                vm.centerDialogVisible = true
            },
            handleDelete: function (index, row) {
                let vm = this
                this.$confirm(`确认删除该账号${row.user_Account}的记录么?`, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.delete('/api/sysuserinfodata/' + row.user_Id)
                        .then(function (response) {
                            if (!response.data.isSuccess) {
                                vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                return;
                            }
                            vm.$message({ title: '成功', message: '删除成功', type: 'success' })
                            vm.fetchList();
                            vm.centerDialogVisible = false
                        })
                        .catch(function (error) {
                            vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                            console.log(error);
                        });

                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '已取消删除'
                    });
                });

            },
            handleAdd: function () {
                let vm = this
                vm.IsCreate = true
                vm.resetForm();
                vm.dialogTitle = "添加信息"
                vm.centerDialogVisible = true
                //添加
            },
            dialogCancel: function () {
                let vm = this;
                vm.centerDialogVisible = false
            },
            dialogSave: function (formName) {
                let vm = this;
                let model=''
                vm.$refs[formName].validate((valid) => {
                    if (valid) {
                        let url = "/api/sysuserinfodata";
                        let method = "POST";
                        if (vm.IsCreate != true) {
                            url = `/api/sysuserinfodata/${vm.form.user_Id}`;
                            method = "PUT";

                        }
                        console.log(vm.form.user_Is_Ldap);
                        console.log(vm.form.user_Is_Lock);
                        model = {
                            useraccount: vm.form.user_Account,
                            username: vm.form.user_Name,
                            userpassword: vm.form.user_Password,
                            useremail: vm.form.user_Email,
                            usermobileno: vm.form.user_Mobile_No,
                        };
                        console.log(model);
                        axios({ url: url, method: method, data: model })
                            .then(function (response) {
                                if (!response.data.isSuccess) {
                                    vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                    return;
                                }
                                vm.$message({ title: '成功', message: response.data.message, type: 'success' })
                                vm.fetchList();
                                vm.centerDialogVisible = false
                            })
                            .catch(function (error) {
                                vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                                console.log(error);
                            });

                    } else {
                        console.log('error submit!!');
                        return;
                    }
                });
            },
            resetForm() {
                let vm = this;
                vm.form.user_Id=''
                vm.form.user_Account = ''
                vm.form.user_Password = ''
                vm.form.user_Name = ''
                vm.form.user_Email = ''
                vm.form.user_Mobile_No = ''
               
            },
            handleSizeChange(val) {
                this.pageSize = val;
                this.fetchList();
            },
            handleCurrentChange(val) {
                this.currentPage = val;
                this.fetchList();
            },

            handleSelectionChange(val) {
                this.multipleSelection = val;

            },

            batchDelete() {
                let vm = this;
                let batchdatas = this.multipleSelection;
                if (batchdatas.length == 0) {
                    vm.$message("请先选中数据再进行操作！");
                    return;
                }
                let ids = '';
                for (let i = 0; i < batchdatas.length; i++) {
                    ids += `&ids=${batchdatas[i].user_Id}`;
                };
                ids = ids.substring(1, ids.length)
                console.log(ids);
                vm.$confirm(`此操作将删除${batchdatas.length}条用户信息, 是否继续?`, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.delete('/api/sysuserinfodata/batchdelete?' + ids)
                        .then(function (response) {
                            if (!response.data.isSuccess) {
                                vm.$message({ title: '失败', message: response.data.message, type: 'error' })
                                return;
                            }
                            vm.$message({ title: '成功', message: '删除成功', type: 'success' })
                            vm.fetchList();
                            vm.centerDialogVisible = false
                        })
                        .catch(function (error) {
                            vm.$message({ title: '异常', message: '发生了预料之外的错误!', type: 'error' })
                            console.log(error);
                        });

                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '已取消删除'
                    });
                });
            },
            test() {
                location.href = "/api/sysuserinfodata/export";
            },
        },
        mounted: function () {
            let vm = this
            vm.fetchList();
        }

    });
</script>



